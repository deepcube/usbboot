#!/bin/sh

# Settings via environment variables. E.g.
#
#     CC=gcc CFLAGS=-g ./configure

[ "$CC" ] || CC=cc
CFLAGS_FTM='-D_POSIX_C_SOURCE=200809L -D_DEFAULT_SOURCE -D_BSD_SOURCE'
CFLAGS_ALL="$CFLAGS_FTM $CFLAGS"

tmpc=conf-tmp.c
trap 'rm "$tmpc"' EXIT INT QUIT TERM HUP

printf %s 'checking whether libc implements fmemopen... '
cat > "$tmpc" << 'EOF'
#include <stdio.h>
FILE *(*p)(void *, size_t, const char *) = fmemopen;
EOF
if $CC $CFLAGS_ALL -Werror -o /dev/null -c "$tmpc" >/dev/null 2>&1; then
	echo yes
else
	echo no
	CFLAGS_FMEMOPEN=-DNEED_FMEMOPEN
fi

printf %s 'checking whether libc implements funopen... '
cat > "$tmpc" << 'EOF'
#include <stdio.h>
FILE *(*p)(
	const void *,
	int (*)(void *, char *, int),
	int (*)(void *, const char *, int),
	fpos_t (*)(void *, fpos_t, int),
	int (*)(void *)
) = funopen;
EOF
if $CC $CFLAGS_ALL -Werror -o /dev/null -c "$tmpc" >/dev/null 2>&1; then
	echo yes
	CFLAGS_FUNOPEN=-DHAVE_FUNOPEN
else
	echo no
fi

printf %s 'creating config.mk... '
cat > config.mk << EOF
# This file was generated by configure.
# Any changes made will be lost if configure is re-run.
CC = $CC
CFLAGS = $CFLAGS
CFLAGS_FTM = $CFLAGS_FTM
CFLAGS_NEED_HAVE = $CFLAGS_FMEMOPEN $CFLAGS_FUNOPEN
EOF
echo done
